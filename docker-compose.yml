name: tpgis_healthcare
services:
  db:
    image: postgis/postgis:16-3.4
    container_name: db
    environment:
      POSTGRES_DB: tpgis_healthcare
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports:
      - "5432:5432"
    volumes:
      - ./infra/db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d tpgis_healthcare"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    image: node:20
    container_name: backend
    working_dir: /usr/src/app
    command: sh -lc "npm install && npm run start:dev"
    environment:
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: app
      DB_PASS: app
      DB_NAME: tpgis_healthcare
      # Watcher stabilisieren:
      TS_NODE_TRANSPILE_ONLY: "true"
      WATCHPACK_POLLING: "true"
    ports:
      - "3000:3000"
    volumes:
      - ./apps/backend:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
    depends_on:
      db:
        condition: service_healthy

  frontend:
    image: node:20
    container_name: frontend
    working_dir: /usr/src/app
    command: sh -lc "npm install && npm run dev -- --host 0.0.0.0 --port 5173"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      # Der Browser spricht über localhost:3000 mit dem Backend (Port-Mapping):
      VITE_API_BASE_URL: "http://localhost:3000"
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/usr/src/app
      - frontend_node_modules:/usr/src/app/node_modules
    depends_on:
      - backend

  # Optional: GUI für Postgres
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  backend_node_modules:
  frontend_node_modules:
